name: Building and deployment app
on:
#   branch_protection_rule:
#     types: [created, edited]
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]
env: 
  FRONT_CONTAINER: lysetskyiv/officespace-user:latest
  BACK_CONTAINER: lysetskyiv/officespace-backend:latest

jobs:
  run_app:
    runs-on: ubuntu-latest
    steps:
      - name: install zip
        run: sudo apt install -y zip

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: create .env for frontend_user
        run: echo ${{ secrets.ENV_FRONT_USER }} >> packages/frontend_user/.env

      - name: create .env for backend
        run: echo ${{ secrets.ENV_BACK }} >> packages/backend/.env

      - name: yarn install 
        run: yarn install


      - name: lint files 
        run: yarn lint

      - name: Build and push frontend
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: ${{ env.FRONT_CONTAINER }}

      - name: Build and push backend
        uses: docker/build-push-action@v3
        with:
          context: "./packages/backend/"
          push: true
          tags: ${{ env.BACK_CONTAINER }}

      - id: ssh_cleanup
        uses: invi5H/ssh-action@v1
        with:
              SSH_HOST: ${{ secrets.SSH_HOST }}
              SSH_PORT: ${{ secrets.SSH_PORT }}
              SSH_USER: ${{ secrets.SSH_USER }}
              SSH_KEY: ${{ secrets.SSH_KEY }}
      - name: Cleanup server
        if: always()
        run: ssh ${{ steps.ssh_cleanup.outputs.SERVER }}  "docker stop $(docker ps -q); docker rm $(docker ps --filter=status=exited --filter=status=created -q); docker rmi $(docker images -a --filter=dangling=true -q)" 
        
        
      - id: ssh_pull
        uses: invi5H/ssh-action@v1
        with:
              SSH_HOST: ${{ secrets.SSH_HOST }}
              SSH_PORT: ${{ secrets.SSH_PORT }}
              SSH_USER: ${{ secrets.SSH_USER }}
              SSH_KEY: ${{ secrets.SSH_KEY }}
      - run: ssh ${{ steps.ssh_pull.outputs.SERVER }}  "docker pull $FRONT_CONTAINER; docker pull $BACK_CONTAINER" 
      
      - id: ssh_run
        uses: invi5H/ssh-action@v1
        with:
              SSH_HOST: ${{ secrets.SSH_HOST }}
              SSH_PORT: ${{ secrets.SSH_PORT }}
              SSH_USER: ${{ secrets.SSH_USER }}
              SSH_KEY: ${{ secrets.SSH_KEY }}
      - run: ssh ${{ steps.ssh_run.outputs.SERVER }}  "docker run -d -p 80:80 $FRONT_CONTAINER; docker run 4000:4000 $BACK_CONTAINER" 