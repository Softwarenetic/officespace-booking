name: Building and deployment app
on:
#   branch_protection_rule:
#     types: [created, edited]
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]

jobs:
  run_app:
    runs-on: ubuntu-latest
    steps:
      - name: install zip
        run: sudo apt install -y zip

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Cache modules
        uses: actions/cache@v1
        id: yarn-cache
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-

      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 18

      - name: Build frontend_admin 
        run: cd packages/frontend_admin && yarn && CI=false && yarn build

      - name: Build frontend_user 
        run: cd packages/frontend_user && yarn && CI=false && yarn build

      - id: ssh_mkdir
        uses: appleboy/ssh-action@v0.1.6
        with:
              host: ${{ secrets.SSH_HOST }}
              port: ${{ secrets.SSH_PORT }}
              username: ${{ secrets.SSH_USER }}
              key: ${{ secrets.SSH_KEY }}
              script: |
                cd /home/ubuntu;
                rm -rf  frontend_user frontend_admin
                mkdir frontend_user frontend_admin
      
      - name: copy files user
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: "packages/frontend_user/build/*"
          target: "frontend_user"

      - name: copy files admin
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: "packages/frontend_admin/build/*"
          target: "frontend_admin"
          
      - id: ssh_move
        uses: invi5H/ssh-action@v1
        with:
              SSH_HOST: ${{ secrets.SSH_HOST }}
              SSH_PORT: ${{ secrets.SSH_PORT }}
              SSH_USER: ${{ secrets.SSH_USER }}
              SSH_KEY: ${{ secrets.SSH_KEY }}
      - run: ssh ${{ steps.ssh_move.outputs.SERVER }} "sudo cp -r /frontend_admin/build /var/www/html/admin/build; sudo cp -r /frontend_user/build /var/www/html/user/build; rm -rf frontend_user frontend_admin"

      - id: ssh_run
        uses: invi5H/ssh-action@v1
        with:
              SSH_HOST: ${{ secrets.SSH_HOST }}
              SSH_PORT: ${{ secrets.SSH_PORT }}
              SSH_USER: ${{ secrets.SSH_USER }}
              SSH_KEY: ${{ secrets.SSH_KEY }}
      - run: ssh ${{ steps.ssh_run.outputs.SERVER }}  "rm -rf officespace-booking; pm2 delete 0; git clone $GITHUB_SERVER_URL/$GITHUB_REPOSITORY; cd officespace-booking; git checkout WBS-8; git pull; cd scripts; . build.sh" 